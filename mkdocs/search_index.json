{
    "docs": [
        {
            "location": "/", 
            "text": "siddhi-gpl-execution-r\n\n\nThis extension runs R script loaded from a file or written in the siddhi query, and each event and produces\naggregated outputs based on the provided input variable parameters and expected output attributes.\n\n\nPrerequisites for using the feature\n\n\nFor Linux\n\n\n\n\nDownload\n and install R\n\n\nInstall JRI.\n\n\nAdd R_HOME and JRI_HOME as environment variables and export\n\n\n\n\nFor UNIX\n\n\n\n\nDownload\n and install R\n\n\nVerify whether the R installation is successful by typing command \"R\" in a new terminal.\n\n\nInstall JRI.\n\n\nIn R console, install using the following command :\n    install.packages(\u2018rJava\u2019, repos='http://cran.us.r-project.org')\n\n\nThis will download the rJava package, and the downloaded location will be shown in the R console\n\n\nIn the UNIX terminal, type R CMD INSTALL {{location of downloaded file}}.\n\n\nAbove command will install JRI in the system.\n\n\n\n\n\n\nSet environment variables\n\n\nGet R_home location via R console using : R.home(component=\"home\").\n\n\nThis will result in somewhat equal to /Library/Frameworks/R.framework/Resources\n\n\nAdd the above result to an environment variable: R_HOME\n\n\nexport the variable: export R_HOME\n\n\nJRI location will be in a similar location to:\n    /Library/Frameworks/R.framework/Versions/3.3/Resources/library/rJava/jri/\n\n\nAdd the above result to an environment variable: JRI_HOME\n\n\nexport JRI_HOME\n\n\n\n\n\n\n\n\nHow to Contribute\n\n\n\n\nPlease report issues at\n  \nSiddhi Github Issue Tacker\n\n\nCarbon Developers List : dev@wso2.org\n\n\nCarbon Architecture List : architecture@wso2.org\n\n\n\n\nWe welcome your feedback and contribution.\n\n\nSiddhi Stream Processor Team\n\n\nAPI Docs:\n\n\n\n\n4.0.2-SNAPSHOT", 
            "title": "Welcome to WSO2 Siddhi IO TCP"
        }, 
        {
            "location": "/#siddhi-gpl-execution-r", 
            "text": "This extension runs R script loaded from a file or written in the siddhi query, and each event and produces\naggregated outputs based on the provided input variable parameters and expected output attributes.", 
            "title": "siddhi-gpl-execution-r"
        }, 
        {
            "location": "/#prerequisites-for-using-the-feature", 
            "text": "", 
            "title": "Prerequisites for using the feature"
        }, 
        {
            "location": "/#for-linux", 
            "text": "Download  and install R  Install JRI.  Add R_HOME and JRI_HOME as environment variables and export", 
            "title": "For Linux"
        }, 
        {
            "location": "/#for-unix", 
            "text": "Download  and install R  Verify whether the R installation is successful by typing command \"R\" in a new terminal.  Install JRI.  In R console, install using the following command :\n    install.packages(\u2018rJava\u2019, repos='http://cran.us.r-project.org')  This will download the rJava package, and the downloaded location will be shown in the R console  In the UNIX terminal, type R CMD INSTALL {{location of downloaded file}}.  Above command will install JRI in the system.    Set environment variables  Get R_home location via R console using : R.home(component=\"home\").  This will result in somewhat equal to /Library/Frameworks/R.framework/Resources  Add the above result to an environment variable: R_HOME  export the variable: export R_HOME  JRI location will be in a similar location to:\n    /Library/Frameworks/R.framework/Versions/3.3/Resources/library/rJava/jri/  Add the above result to an environment variable: JRI_HOME  export JRI_HOME", 
            "title": "For UNIX"
        }, 
        {
            "location": "/#how-to-contribute", 
            "text": "Please report issues at\n   Siddhi Github Issue Tacker  Carbon Developers List : dev@wso2.org  Carbon Architecture List : architecture@wso2.org   We welcome your feedback and contribution.  Siddhi Stream Processor Team", 
            "title": "How to Contribute"
        }, 
        {
            "location": "/#api-docs", 
            "text": "4.0.2-SNAPSHOT", 
            "title": "API Docs:"
        }, 
        {
            "location": "/about/license/", 
            "text": "Copyright (c) 2017 WSO2 Inc. (\nhttp://www.wso2.org\n) All Rights Reserved.\n\n\nWSO2 Inc. licenses this file to you under the Apache License,\nVersion 2.0 (the \"License\"); you may not use this file except\nin compliance with the License.\nYou may obtain a copy of the License at\n\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\n\nUnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\n\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, either express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\n\n\n-------------------------------------------------------------------------\n                              Apache License\n                        Version 2.0, January 2004\n                     http://www.apache.org/licenses/\n\n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n1. Definitions.\n\n   \nLicense\n shall mean the terms and conditions for use, reproduction,\n   and distribution as defined by Sections 1 through 9 of this document.\n\n   \nLicensor\n shall mean the copyright owner or entity authorized by\n   the copyright owner that is granting the License.\n\n   \nLegal Entity\n shall mean the union of the acting entity and all\n   other entities that control, are controlled by, or are under common\n   control with that entity. For the purposes of this definition,\n   \ncontrol\n means (i) the power, direct or indirect, to cause the\n   direction or management of such entity, whether by contract or\n   otherwise, or (ii) ownership of fifty percent (50%) or more of the\n   outstanding shares, or (iii) beneficial ownership of such entity.\n\n   \nYou\n (or \nYour\n) shall mean an individual or Legal Entity\n   exercising permissions granted by this License.\n\n   \nSource\n form shall mean the preferred form for making modifications,\n   including but not limited to software source code, documentation\n   source, and configuration files.\n\n   \nObject\n form shall mean any form resulting from mechanical\n   transformation or translation of a Source form, including but\n   not limited to compiled object code, generated documentation,\n   and conversions to other media types.\n\n   \nWork\n shall mean the work of authorship, whether in Source or\n   Object form, made available under the License, as indicated by a\n   copyright notice that is included in or attached to the work\n   (an example is provided in the Appendix below).\n\n   \nDerivative Works\n shall mean any work, whether in Source or Object\n   form, that is based on (or derived from) the Work and for which the\n   editorial revisions, annotations, elaborations, or other modifications\n   represent, as a whole, an original work of authorship. For the purposes\n   of this License, Derivative Works shall not include works that remain\n   separable from, or merely link (or bind by name) to the interfaces of,\n   the Work and Derivative Works thereof.\n\n   \nContribution\n shall mean any work of authorship, including\n   the original version of the Work and any modifications or additions\n   to that Work or Derivative Works thereof, that is intentionally\n   submitted to Licensor for inclusion in the Work by the copyright owner\n   or by an individual or Legal Entity authorized to submit on behalf of\n   the copyright owner. For the purposes of this definition, \nsubmitted\n\n   means any form of electronic, verbal, or written communication sent\n   to the Licensor or its representatives, including but not limited to\n   communication on electronic mailing lists, source code control systems,\n   and issue tracking systems that are managed by, or on behalf of, the\n   Licensor for the purpose of discussing and improving the Work, but\n   excluding communication that is conspicuously marked or otherwise\n   designated in writing by the copyright owner as \nNot a Contribution.\n\n\n   \nContributor\n shall mean Licensor and any individual or Legal Entity\n   on behalf of whom a Contribution has been received by Licensor and\n   subsequently incorporated within the Work.\n\n2. Grant of Copyright License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   copyright license to reproduce, prepare Derivative Works of,\n   publicly display, publicly perform, sublicense, and distribute the\n   Work and such Derivative Works in Source or Object form.\n\n3. Grant of Patent License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   (except as stated in this section) patent license to make, have made,\n   use, offer to sell, sell, import, and otherwise transfer the Work,\n   where such license applies only to those patent claims licensable\n   by such Contributor that are necessarily infringed by their\n   Contribution(s) alone or by combination of their Contribution(s)\n   with the Work to which such Contribution(s) was submitted. If You\n   institute patent litigation against any entity (including a\n   cross-claim or counterclaim in a lawsuit) alleging that the Work\n   or a Contribution incorporated within the Work constitutes direct\n   or contributory patent infringement, then any patent licenses\n   granted to You under this License for that Work shall terminate\n   as of the date such litigation is filed.\n\n4. Redistribution. You may reproduce and distribute copies of the\n   Work or Derivative Works thereof in any medium, with or without\n   modifications, and in Source or Object form, provided that You\n   meet the following conditions:\n\n   (a) You must give any other recipients of the Work or\n       Derivative Works a copy of this License; and\n\n   (b) You must cause any modified files to carry prominent notices\n       stating that You changed the files; and\n\n   (c) You must retain, in the Source form of any Derivative Works\n       that You distribute, all copyright, patent, trademark, and\n       attribution notices from the Source form of the Work,\n       excluding those notices that do not pertain to any part of\n       the Derivative Works; and\n\n   (d) If the Work includes a \nNOTICE\n text file as part of its\n       distribution, then any Derivative Works that You distribute must\n       include a readable copy of the attribution notices contained\n       within such NOTICE file, excluding those notices that do not\n       pertain to any part of the Derivative Works, in at least one\n       of the following places: within a NOTICE text file distributed\n       as part of the Derivative Works; within the Source form or\n       documentation, if provided along with the Derivative Works; or,\n       within a display generated by the Derivative Works, if and\n       wherever such third-party notices normally appear. The contents\n       of the NOTICE file are for informational purposes only and\n       do not modify the License. You may add Your own attribution\n       notices within Derivative Works that You distribute, alongside\n       or as an addendum to the NOTICE text from the Work, provided\n       that such additional attribution notices cannot be construed\n       as modifying the License.\n\n   You may add Your own copyright statement to Your modifications and\n   may provide additional or different license terms and conditions\n   for use, reproduction, or distribution of Your modifications, or\n   for any such Derivative Works as a whole, provided Your use,\n   reproduction, and distribution of the Work otherwise complies with\n   the conditions stated in this License.\n\n5. Submission of Contributions. Unless You explicitly state otherwise,\n   any Contribution intentionally submitted for inclusion in the Work\n   by You to the Licensor shall be under the terms and conditions of\n   this License, without any additional terms or conditions.\n   Notwithstanding the above, nothing herein shall supersede or modify\n   the terms of any separate license agreement you may have executed\n   with Licensor regarding such Contributions.\n\n6. Trademarks. This License does not grant permission to use the trade\n   names, trademarks, service marks, or product names of the Licensor,\n   except as required for reasonable and customary use in describing the\n   origin of the Work and reproducing the content of the NOTICE file.\n\n7. Disclaimer of Warranty. Unless required by applicable law or\n   agreed to in writing, Licensor provides the Work (and each\n   Contributor provides its Contributions) on an \nAS IS\n BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n   implied, including, without limitation, any warranties or conditions\n   of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n   PARTICULAR PURPOSE. You are solely responsible for determining the\n   appropriateness of using or redistributing the Work and assume any\n   risks associated with Your exercise of permissions under this License.\n\n8. Limitation of Liability. In no event and under no legal theory,\n   whether in tort (including negligence), contract, or otherwise,\n   unless required by applicable law (such as deliberate and grossly\n   negligent acts) or agreed to in writing, shall any Contributor be\n   liable to You for damages, including any direct, indirect, special,\n   incidental, or consequential damages of any character arising as a\n   result of this License or out of the use or inability to use the\n   Work (including but not limited to damages for loss of goodwill,\n   work stoppage, computer failure or malfunction, or any and all\n   other commercial damages or losses), even if such Contributor\n   has been advised of the possibility of such damages.\n\n9. Accepting Warranty or Additional Liability. While redistributing\n   the Work or Derivative Works thereof, You may choose to offer,\n   and charge a fee for, acceptance of support, warranty, indemnity,\n   or other liability obligations and/or rights consistent with this\n   License. However, in accepting such obligations, You may act only\n   on Your own behalf and on Your sole responsibility, not on behalf\n   of any other Contributor, and only if You agree to indemnify,\n   defend, and hold each Contributor harmless for any liability\n   incurred by, or claims asserted against, such Contributor by reason\n   of your accepting any such warranty or additional liability.\n\nEND OF TERMS AND CONDITIONS", 
            "title": "License"
        }, 
        {
            "location": "/api/4.0.2-SNAPSHOT/", 
            "text": "R\n\n\neval \n(Stream Processor)\n\n\nR script Stream processor. This extension runs the R script loaded from a file to each event and produces aggregated outputs based on the provided input variable parameters and expected output attributes.\n\n\n\nSyntax\n\n\neval(\nSTRING\n script, \nINT|LONG|FLOAT|DOUBLE|STRING|STRING\n output.attributes, \nINT|LONG|FLOAT|DOUBLE|STRING|STRING\n input.attributes)\n\n\n\n\nQuery Parameters\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \nscript\n\n        \nR script as a string produces aggregated outputs based on the provided input variable parameters and expected output attributes\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \noutput.attributes\n\n        \nA set of output attributes separated by commas as string. Each attribute is denoted as \nname\nspace\ntype\n. e.g., 'output1 string, output2 long'\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\nSTRING\nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \ninput.attributes\n\n        \nA set of input attributes separated by commas after output attributes. e.g., 'att1, att2'\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\nSTRING\nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\n\nExtra Return Attributes\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nPossible Types\n\n    \n\n    \n\n        \noutputParameters\n\n        \nThis runs the R script for each event and produces  aggregated outputs based on the provided input variable parameters and expected output attributes.\n\n        \nINT\nLONG\nFLOAT\nDOUBLE\nSTRING\nSTRING\n\n    \n\n\n\n\n\nExamples\n\n\nExample 1\n\n\n@info(name = 'query1')\nfrom weather#window.lengthBatch(2)#r:eval(\nc \n- sum(time); m \n- sum(temp); \n, \nc long, m double\n, time, temp) \nselect * \ninsert into dataOut;\n\n\n\n\nThis r script sums up the time and temp attribute values in the window and output the result as c and m attributes in the output stream.\n\n\n\nevalSource \n(Stream Processor)\n\n\nR source Stream processor. This extension the R script loaded from a file to each event and produces aggregated outputs based on the provided input variable parameters and expected output attributes.\n\n\n\nSyntax\n\n\nevalSource(\nSTRING\n file.path, \nINT|LONG|FLOAT|DOUBLE|STRING|STRING\n output.attributes, \nINT|LONG|FLOAT|DOUBLE|STRING|STRING\n input.attributes)\n\n\n\n\nQuery Parameters\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \nfile.path\n\n        \nThe file path of the R script where this script uses the input variable parameters and produces the expected output attributes.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \noutput.attributes\n\n        \nA set of output attributes separated by commas as string. Each attribute is denoted as \nname\nspace\ntype\n. e.g., 'output1 string, output2 long'\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\nSTRING\nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \ninput.attributes\n\n        \nA set of input attributes separated by commas after output attributes. e.g., 'att1, att2'\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\nSTRING\nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\n\nExtra Return Attributes\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nPossible Types\n\n    \n\n    \n\n        \noutputParameters\n\n        \nThis runs the R script for each event and produces  aggregated outputs based on the provided input variable parameters and expected output attributes.\n\n        \nINT\nLONG\nFLOAT\nDOUBLE\nSTRING\nSTRING\n\n    \n\n\n\n\n\nExamples\n\n\nExample 1\n\n\n@info(name = 'query1')\nfrom weather#window.lengthBatch(2)#r:evalSource(\nsrc/test/resources/sample2.R\n, \nm int, c float\n, time, temp)\nselect *\ninsert into dataOut;\n\n\n\n\nThis r source function takes in a r script file location and computes the output as defined in the file.", 
            "title": "4.0.2-SNAPSHOT"
        }, 
        {
            "location": "/api/4.0.2-SNAPSHOT/#r", 
            "text": "", 
            "title": "R"
        }, 
        {
            "location": "/api/4.0.2-SNAPSHOT/#eval-stream-processor", 
            "text": "R script Stream processor. This extension runs the R script loaded from a file to each event and produces aggregated outputs based on the provided input variable parameters and expected output attributes.", 
            "title": "eval (Stream Processor)"
        }, 
        {
            "location": "/api/4.0.2-SNAPSHOT/#syntax", 
            "text": "eval( STRING  script,  INT|LONG|FLOAT|DOUBLE|STRING|STRING  output.attributes,  INT|LONG|FLOAT|DOUBLE|STRING|STRING  input.attributes)", 
            "title": "Syntax"
        }, 
        {
            "location": "/api/4.0.2-SNAPSHOT/#query-parameters", 
            "text": "Name \n         Description \n         Default Value \n         Possible Types \n         Optional \n         Dynamic \n     \n     \n         script \n         R script as a string produces aggregated outputs based on the provided input variable parameters and expected output attributes \n         \n         STRING \n         No \n         No \n     \n     \n         output.attributes \n         A set of output attributes separated by commas as string. Each attribute is denoted as  name space type . e.g., 'output1 string, output2 long' \n         \n         INT LONG FLOAT DOUBLE STRING STRING \n         No \n         No \n     \n     \n         input.attributes \n         A set of input attributes separated by commas after output attributes. e.g., 'att1, att2' \n         \n         INT LONG FLOAT DOUBLE STRING STRING \n         No \n         No", 
            "title": "Query Parameters"
        }, 
        {
            "location": "/api/4.0.2-SNAPSHOT/#extra-return-attributes", 
            "text": "Name \n         Description \n         Possible Types \n     \n     \n         outputParameters \n         This runs the R script for each event and produces  aggregated outputs based on the provided input variable parameters and expected output attributes. \n         INT LONG FLOAT DOUBLE STRING STRING", 
            "title": "Extra Return Attributes"
        }, 
        {
            "location": "/api/4.0.2-SNAPSHOT/#examples", 
            "text": "", 
            "title": "Examples"
        }, 
        {
            "location": "/api/4.0.2-SNAPSHOT/#example-1", 
            "text": "@info(name = 'query1')\nfrom weather#window.lengthBatch(2)#r:eval( c  - sum(time); m  - sum(temp);  ,  c long, m double , time, temp) \nselect * \ninsert into dataOut;  This r script sums up the time and temp attribute values in the window and output the result as c and m attributes in the output stream.", 
            "title": "Example 1"
        }, 
        {
            "location": "/api/4.0.2-SNAPSHOT/#evalsource-stream-processor", 
            "text": "R source Stream processor. This extension the R script loaded from a file to each event and produces aggregated outputs based on the provided input variable parameters and expected output attributes.", 
            "title": "evalSource (Stream Processor)"
        }, 
        {
            "location": "/api/4.0.2-SNAPSHOT/#syntax_1", 
            "text": "evalSource( STRING  file.path,  INT|LONG|FLOAT|DOUBLE|STRING|STRING  output.attributes,  INT|LONG|FLOAT|DOUBLE|STRING|STRING  input.attributes)", 
            "title": "Syntax"
        }, 
        {
            "location": "/api/4.0.2-SNAPSHOT/#query-parameters_1", 
            "text": "Name \n         Description \n         Default Value \n         Possible Types \n         Optional \n         Dynamic \n     \n     \n         file.path \n         The file path of the R script where this script uses the input variable parameters and produces the expected output attributes. \n         \n         STRING \n         No \n         No \n     \n     \n         output.attributes \n         A set of output attributes separated by commas as string. Each attribute is denoted as  name space type . e.g., 'output1 string, output2 long' \n         \n         INT LONG FLOAT DOUBLE STRING STRING \n         No \n         No \n     \n     \n         input.attributes \n         A set of input attributes separated by commas after output attributes. e.g., 'att1, att2' \n         \n         INT LONG FLOAT DOUBLE STRING STRING \n         No \n         No", 
            "title": "Query Parameters"
        }, 
        {
            "location": "/api/4.0.2-SNAPSHOT/#extra-return-attributes_1", 
            "text": "Name \n         Description \n         Possible Types \n     \n     \n         outputParameters \n         This runs the R script for each event and produces  aggregated outputs based on the provided input variable parameters and expected output attributes. \n         INT LONG FLOAT DOUBLE STRING STRING", 
            "title": "Extra Return Attributes"
        }, 
        {
            "location": "/api/4.0.2-SNAPSHOT/#examples_1", 
            "text": "", 
            "title": "Examples"
        }, 
        {
            "location": "/api/4.0.2-SNAPSHOT/#example-1_1", 
            "text": "@info(name = 'query1')\nfrom weather#window.lengthBatch(2)#r:evalSource( src/test/resources/sample2.R ,  m int, c float , time, temp)\nselect *\ninsert into dataOut;  This r source function takes in a r script file location and computes the output as defined in the file.", 
            "title": "Example 1"
        }
    ]
}